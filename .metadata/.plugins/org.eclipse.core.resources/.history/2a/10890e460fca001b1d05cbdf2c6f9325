package dayfour;

/**
 * 
 * -- large, complex, long-start-up-time, memory-intensive components
 * 		-- &&&& don't need more than one 
 * -- stateless component: doesn't store state
 * -- stateful component: store some data about an object (multiple instances) 
 * Singleton - initialize/store only 1 instance of this component
 * 
 * -- private constructor
 *
 */
public class SingletonDesignPattern {

	public static void main(String[] args) {
		//ServiceClass obj = new ServiceClass(); // will not compile
	}
	
	
}

/**
 * Lazy-loaded: Initialized precisely when it is first requested..
 * 
 */
class LazilyLoadedSingleton {
	// constant (static final) - ALL_CAPS_NAMING
	private static LazilyLoadedSingleton INSTANCE = null;
	
	// no one can create an object
	private LazilyLoadedSingleton() {
		
	}
		
	public static LazilyLoadedSingleton getInstance() {
		if(INSTANCE == null) {
			INSTANCE = new LazilyLoadedSingleton();
			return INSTANCE;
		}else {
			return INSTANCE;
		}
	}
	
}

/**
 * Eagerly-loaded: Initialize the singleton when the app starts
 * Load critical components on start-up.. everything else is lazy
 * 
 */
class EagerLoadedSingleton {
	
}










