package daythree;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;

public class FileIO {

	// InputStream, OutputStream, bytes, characters, strings/lines
	public static void main(String[] args) {
		readCsv("users.csv");
	}

	public static void readCsv(String filename) {
		File file = new File(filename);
		try (Scanner scanner = new Scanner(file);) {
			// loop over lines in a file
			while(scanner.hasNextLine()) {
				System.out.println(scanner.nextLine()); // \n
				scanner.useDelimiter(",");
				scanner.next();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	
	
	
	
	
	
	
	public void tryWith() {
		File file = new File("data.txt");
		// "try-with" resources

		try (Scanner scanner = new Scanner(file)) {
			String content = scanner.nextLine();
			System.out.println(content);
		} catch (Exception e) {
			System.out.println(e.getClass());
		}

		// automatically close resources
		// anything that implements Autocloseable
	}

	public void tryFinally() {
		// not create a file on your file system
		// an object representation of some file
		Scanner scanner = null;
		try {
			File file = new File("bloop");
			scanner = new Scanner(file);
			String content = scanner.nextLine(); // returns token up to \n character
			System.out.println(content);
		} catch (Exception e) {
			System.out.println(e.getClass());
		} finally {
			// code executes no matter what
			// executes try goes well, OR exception is thrown
			// close out resources
			if (scanner != null) {
				scanner.close();
			}
		}
	}

	public void readHello() throws FileNotFoundException {
		// not create a file on your file system
		// an object representation of some file
		File file = new File("text.txt");
		Scanner scanner = new Scanner(file);
		String content = scanner.nextLine(); // returns token up to \n character
		System.out.println(content);
		scanner.close();
	}

	public void writeHello(String fileName) throws FileNotFoundException {
		// Open file, r/w, close file
		PrintWriter writer = new PrintWriter(fileName);
		// writing to file that doesn't exists will create the file
		writer.println("Hello World");
		writer.close();
	}

}
